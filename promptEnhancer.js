// promptEnhancer.js - –õ–æ–≥–∏–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤ —á–µ—Ä–µ–∑ OpenAI v2.0

const OpenAI = require('openai');
const { engines } = require('./config');

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
 */
function detectLanguage(text) {
  const cyrillicPattern = /[–∞-—è–ê-–Ø—ë–Å]/;
  return cyrillicPattern.test(text) ? 'ru' : 'en';
}

/**
 * –£–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ AI –¥–≤–∏–∂–∫–∞
 */
async function enhancePrompt(userPrompt, engineKey) {
  const engine = engines[engineKey];
  
  if (!engine) {
    throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–≤–∏–∂–æ–∫: ${engineKey}`);
  }

  const userLanguage = detectLanguage(userPrompt);
  
  // –°–æ–∑–¥–∞–µ–º system prompt –¥–ª—è GPT-4
  const systemPrompt = `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è ${engine.name}.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–í–ò–ñ–ö–ï:
–ù–∞–∑–≤–∞–Ω–∏–µ: ${engine.name}
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${engine.category}
–û–ø–∏—Å–∞–Ω–∏–µ: ${engine.description}
${engine.maxLength ? `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–∏–¥–µ–æ: ${engine.maxLength}` : ''}
${engine.template ? `–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: ${engine.template}` : ''}
${engine.parameters ? `–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: ${engine.parameters.join(', ')}` : ''}

–ü–†–ê–í–ò–õ–ê –£–õ–£–ß–®–ï–ù–ò–Ø –ü–†–û–ú–ü–¢–ê:
${engine.enhancementRules.map((rule, i) => `${i + 1}. ${rule}`).join('\n')}

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–º–ø—Ç –Ω–∞ ${userLanguage === 'ru' ? '—Ä—É—Å—Å–∫–æ–º' : '–∞–Ω–≥–ª–∏–π—Å–∫–æ–º'} —è–∑—ã–∫–µ
2. –£–ª—É—á—à–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º –≤—ã—à–µ –¥–ª—è ${engine.name}
3. –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –°–¢–†–û–ì–û –≤ —Å–ª–µ–¥—É—é—â–µ–º JSON —Ñ–æ—Ä–º–∞—Ç–µ:

{
  "enhanced_prompt": "—É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ",
  "translation_ru": "–ø–µ—Ä–µ–≤–æ–¥ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è"
}

–í–ê–ñ–ù–û:
- enhanced_prompt –í–°–ï–ì–î–ê –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—Å–∞–ª –Ω–∞ —Ä—É—Å—Å–∫–æ–º
- translation_ru - —ç—Ç–æ –ø–µ—Ä–µ–≤–æ–¥ enhanced_prompt –Ω–∞ —Ä—É—Å—Å–∫–∏–π
- –°–æ—Ö—Ä–∞–Ω—è–π –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ —É–ª—É—á—à–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –¥–µ—Ç–∞–ª–∏
- –ë—É–¥—å –∫—Ä–∞—Ç–∫–∏–º, –Ω–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
- –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ, —Ç–æ–ª—å–∫–æ JSON`;

  try {
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        { role: 'system', content: systemPrompt },
        { role: 'user', content: userPrompt }
      ],
      temperature: 0.7,
      max_tokens: 800,
      response_format: { type: "json_object" }
    });

    const result = JSON.parse(completion.choices[0].message.content);
    
    return {
      success: true,
      original: userPrompt,
      enhanced: result.enhanced_prompt,
      translation: result.translation_ru,
      engine: engine.name,
      engineIcon: engine.icon
    };

  } catch (error) {
    console.error('Error enhancing prompt:', error);
    
    return {
      success: false,
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
      details: error.message
    };
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–°–û–ö–†–ê–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 */
function formatResult(result) {
  if (!result.success) {
    return `‚ùå ${result.error}`;
  }

  let message = `${result.engineIcon} *${result.engine}*\n\n`;
  
  message += `‚ú® *Enhanced:*\n\`\`\`\n${result.enhanced}\n\`\`\`\n\n`;
  
  message += `üîÑ ${result.translation}`;
  
  return message;
}

module.exports = {
  enhancePrompt,
  formatResult,
  detectLanguage
};